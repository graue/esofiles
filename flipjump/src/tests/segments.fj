startup

X1 = 0x10000000
X2 = 0x20000000
X4 = 0x40000000

bit.print 4, str_hi

bit.input 4, X1

// both are already zeros because they are reserved:
//zero 20, X2
//zero 20, num

rep(4, i) more_digit 20, num, X2, X1+8*dw*i

;X4

back:
    bit.print 6, str_bye
    ;end


  error:
    bit

  str_hi:
    bit.str "Hi!\n"
  str_bye:
    bit.str "\nBye!\n"


def more_digit width, num, inter, ascii < error {
    bit.shl width, 4, num
    bit.ascii2hex error, inter, ascii
    bit.add width, num, inter
}


segment X1
    reserve dw*8*4
segment X2
    reserve dw*20
segment X4
    bit.add 20, num, num
    bit.print_hex_int 20, num, 1
    ;back
  end:
    loop

  num:
    reserve dw*10
    reserve dw*10
